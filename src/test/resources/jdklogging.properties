# Copyright 2013-2014 Splunk, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"): you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# We will write to a Splunk TCP input using java.util.logging's SocketHandler. This line
# sets it to be the default handler for all loggers.
handlers = java.util.logging.SocketHandler
config =

# Set the default logging level for the root logger
.level = INFO

# Implicitly create a logger called 'splunk.logger', set its level to INFO, and
# make it log using the SocketHandler.
splunk.logger.level = INFO
splunk.logger.handlers = java.util.logging.SocketHandler

# Configure the SocketHandler to write to TCP port localhost:15000. Note that TCP inputs
# are *not* the same as Splunk's management port. You can find the documentation
# on how to open TCP inputs on Splunk at
#
#           http://docs.splunk.com/Documentation/Splunk/6.0.1/Data/Monitornetworkports
#
#       You can find the documentation on using a SocketHandler at
#
#           http://docs.oracle.com/javase/7/docs/api/java/util/logging/SocketHandler.html

java.util.logging.SocketHandler.level = INFO
java.util.logging.SocketHandler.host = localhost
java.util.logging.SocketHandler.port = 15000
# You would usually use XMLFormatter or SimpleFormatter for this property, but
# SimpleFormatter doesn't accept a format string under Java 6, and so we cannot
# control its output. Thus we use a trivial formatter as part of the test suite
# to make it easy to deal with.
java.util.logging.SocketHandler.formatter = com.splunk.logging.TestFormatter
